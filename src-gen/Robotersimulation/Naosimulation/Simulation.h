// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#ifndef ROBOTERSIMULATION_NAOSIMULATION_SIMULATION_H
#define ROBOTERSIMULATION_NAOSIMULATION_SIMULATION_H

/************************************************************
 Simulation class header
 ************************************************************/

#include "Robotersimulation/Naosimulation/Pkg_Naosimulation.h"

#include "AnsiCLibrary/Pkg_AnsiCLibrary.h"
#include "Robotersimulation/Naosimulation/ODEWelt.h"
#include "Robotersimulation/Naosimulation/Roboter.h"
#include "ode/ode.h"

namespace Robotersimulation {
namespace ODE {
class dGeomID;
}
}

namespace Robotersimulation {
namespace Naosimulation {

/************************************************************/
/**
 *
 */
class Simulation {

	friend class ODESimulation;

public:

	/**
	 * @param zeit
	 */
	virtual int simulate(double zeit) = 0;

	/**
	 *
	*/
	virtual void beende() = 0;

	/**
	 * @param argc
	 * @param **argv
	 */
	Simulation(int argc, char **argv);

	/**
	 * @param name
	 * @param grad
	 */
	void setAngles(std::string name, double grad);

	/**
	 * @param name
	 */
	double getAngles(std::string name);

	/**
	 *
	 */
	static void emitState();

	/**
	* @param taste
	*/
	static void tastatur_auslesen(int /*in*/taste);

private:

	/**
	 *
	 */
	static Roboter roboter;

	/**
	 *
	 */
	int argc;

	/**
	 *
	 */
	char **argv;
};
/************************************************************/
/* External declarations (package visibility)               */
/************************************************************/

/* Inline functions                                         */

} // of namespace Naosimulation
} // of namespace Robotersimulation

/************************************************************
 End of Simulation class header
 ************************************************************/

#endif
