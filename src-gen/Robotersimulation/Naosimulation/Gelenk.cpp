// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define Robotersimulation_Naosimulation_Gelenk_BODY

/************************************************************
 Gelenk class body
 ************************************************************/

// include associated header file
#include "Robotersimulation/Naosimulation/Gelenk.h"
#include <math.h>
#include <stdio.h>

// Derived includes directives

namespace Robotersimulation {
namespace Naosimulation {

// static attributes (if any)

/**
 * 
 * @param grad 
 */
void Gelenk::setWinkelUm(double /*in*/grad) {
	double rad = grad * (M_PI/180);
	theta += rad;

	if (theta < minWinkel) theta = minWinkel;
	if (theta > maxWinkel) theta = maxWinkel;
}

/**
 * 
 */
double Gelenk::getWinkel() {
	double grad = theta * (180/M_PI);
	return grad;
}

/**
 *
 * @param grad 
 */
void Gelenk::setMinWinkel(double /*in*/grad) {
	double rad = grad * (M_PI/180);
	minWinkel = rad;
}

/**
 * 
 * @param grad 
 */
void Gelenk::setMaxWinkel(double /*in*/grad) {
	double rad = grad * (M_PI/180);
	maxWinkel = rad;
}

} // of namespace Naosimulation
} // of namespace Robotersimulation

/************************************************************
 End of Gelenk class body
 ************************************************************/
