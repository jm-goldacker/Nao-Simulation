// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define Robotersimulation_Naosimulation_ODEKoerperteil_BODY

/************************************************************
 ODEKoerperteil class body
 ************************************************************/

// include associated header file
#include "Robotersimulation/Naosimulation/ODEKoerperteil.h"

#ifdef  dDOUBLE
#define dsDrawSphere  dsDrawSphereD
#define dsDrawCylinder dsDrawCylinderD
#define dsDrawBox  dsDrawBoxD
#define dsDrawLine     dsDrawLineD
#endif

// Derived includes directives

namespace Robotersimulation {
namespace Naosimulation {

// static attributes (if any)

/**
 * 
 * @param rotation 
 */
void ODEKoerperteil::setRotation(double /*in*/rotation) {
	dMatrix3 R;
	dRFromAxisAndAngle(R,1.0,0.0,0.0, rotation);
	dBodySetRotation(body,R);
}

/**
 * 
 */
void ODEKoerperteil::zeichne() {
	const dReal *pos1, *R1;

	dsSetColorAlpha (0,0,1,1);
	pos1 = dBodyGetPosition(body);
	R1   = dBodyGetRotation(body);
	dsDrawCylinder(pos1,R1,laenge, radius);
}

/**
 * 
 * @param welt 
 */
void ODEKoerperteil::erzeugeBody(Welt * /*in*/welt) {
	body = dBodyCreate((dWorldID) welt->getID());
	dBodySetPosition(body, position[0], position[1], position[2]);
}

/**
 * 
 * @return  
 */
void * ODEKoerperteil::getBody() {
	return body;
}

} // of namespace Naosimulation
} // of namespace Robotersimulation

/************************************************************
 End of ODEKoerperteil class body
 ************************************************************/
