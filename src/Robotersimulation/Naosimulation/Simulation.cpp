// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define Robotersimulation_Naosimulation_Simulation_BODY

/************************************************************
 Simulation class body
 ************************************************************/

// include associated header file
#include <Robotersimulation/Naosimulation/ODESimulation.h>

#include <sys/time.h>
#include <iostream>

// Derived includes directives

namespace Robotersimulation {
namespace Naosimulation {

// static attributes (if any)
Roboter Simulation::roboter;

/**
 * @param argc
 * @param argv
 */
Simulation::Simulation(int argc, char **argv) {
	this->argc = argc;
	this->argv = argv;
}

/**
 * @param name
 * @param grad
 */
void Simulation::setAngles(std::string name, double grad) {
	roboter.setAngles(name, grad);
}

/**
 * @param name
 */
double Simulation::getAngles(std::string name) {
	return roboter.getAngles(name);
}

/**
 *
 */
void Simulation::emitState() {
	std::cout << "Linke Koerperhaelfte:" << std::endl;
	std::cout << "LAnkleRoll: " << roboter.getAngles("LAnkleRoll") << std::endl;
	std::cout << "LAnklePitch: " << roboter.getAngles("LAnklePitch") << std::endl;
	std::cout << "LKneePitch: " << roboter.getAngles("LKneePitch") << std::endl << std::endl;

	std::cout << "Rechte Koerperhaelfte:" << std::endl;
	std::cout << "RAnkleRoll: " << roboter.getAngles("RAnkleRoll") << std::endl;
	std::cout << "RAnklePitch: " << roboter.getAngles("RAnklePitch") << std::endl;
	std::cout << "RKneePitch: " << roboter.getAngles("RKneePitch") << std::endl << std::endl;
}

/**
 *
 * @param taste
 */
void Simulation::tastatur_auslesen(int /*in*/taste) {
	switch (taste)
	    {
	    case 'y':
	    	roboter.setAngles("LAnklePitch", 0.5);
	        break;
	    case 'Y':
	    	roboter.setAngles("LAnklePitch", -0.5);
	        break;
	    case 'x':
	        roboter.setAngles("RAnklePitch", 0.5);
	        break;
	    case 'X':
	        roboter.setAngles("RAnklePitch", -0.5);
	        break;
	    case 'a':
	        roboter.setAngles("LAnkleRoll", 0.5);
	        break;
	    case 'A':
	        roboter.setAngles("LAnkleRoll", -0.5);
	        break;
	    case 's':
	        roboter.setAngles("RAnkleRoll", 0.5);
	        break;
	    case 'S':
	        roboter.setAngles("RAnkleRoll", -0.5);
	        break;
	    case 'q':
	    	roboter.setAngles("LKneePitch", 0.5);
	    	break;
	    case 'Q':
	    	roboter.setAngles("LKneePitch", -0.5);
	    	break;
	    case 'w':
	    	roboter.setAngles("RKneePitch", 0.5);
	        break;
	    case 'W':
	    	roboter.setAngles("RKneePitch", -0.5);
	    	break;
	    case 'z':
	    	emitState();
	    }
}


} // of namespace Naosimulation
} // of namespace Robotersimulation

/************************************************************
 End of Simulation class body
 ************************************************************/
